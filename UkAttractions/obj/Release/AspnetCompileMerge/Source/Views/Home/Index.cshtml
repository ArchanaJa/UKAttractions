@using PagedList;
@using PagedList.Mvc;

@model IPagedList<UKAttractions.Models.CountryAttraction>

@*<link href="~/Content/PagedList.css" rel="stylesheet" />*@
@{
    ViewBag.Title = "Index";
}

@Html.Action("SliderImages", "Home")
<br />
<br />
<div class="container">
    <div class="database-margin">
        <div class="container body-content">
            <div class="animated fadeIn">
                @Html.ActionLink("Add New Attraction", "Create", null, new { @class = "btn btn-info pull-right adjust-pull-right" })
            </div>
            <br /><br /><br />

            @using (Html.BeginForm())
            {
                <div class="container searchbar">
                    <div class="row">
                        <div class="panel panel-default">
                            <div class="animated fadeIn panel-body">
                                <div class="col-md-4 col-sm-6 search-bar-text">
                                    Search Attractions by City or by Name:
                                </div>
                                <div class="col-md-4 col-sm-6 col-xs-12 search-bar-form">
                                    @Html.DropDownList("City", (IEnumerable<SelectListItem>)ViewBag.Database, "All", new { @class = "form-control" })
                                </div>
                                <div class="col-md-4 col-sm-6 col-xs-12 search-bar-form">
                                    <div class="row">
                                        <div id="custom-search-input">
                                            <div class="input-group col-md-12 search-bar">
                                                @Html.TextBox("searchString", null, new { @class = "form-control", placeholder = "Search by name" })
                                                <span class="input-group-btn">
                                                    <input type="submit" value="Search" class="btn btn-info" />
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div>
                <table class="table">

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="imageC">
                                <a href="@Url.Action("Details", new {id = item.Id })">
                                    <img src="@Url.Content(@Html.DisplayFor(m => item.Image).ToString())" width="300" height="260" class="Attraction_Image " />
                                    <h3 class="AttrName">@Html.DisplayFor(m => item.Name)</h3>
                                </a>

                            </td>

                            <td class="media">
                                <p>@Html.DisplayFor(m => item.Description1)</p>
                                <br /><br />
                                <p><a href="@Html.DisplayFor(m=>item.LinktoAttrctn)" target="_blank">Visit website</a></p>
                            </td>

                            <td class="media">
                                <div class="btn-collection">
                                    <br />
                                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info edit-buttons" })
                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-info edit-buttonsM" })
                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-info edit-buttons" })
                                </div>
                            </td>
                        </tr>
                    }
                </table>
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true  })

            </div>
        </div>

    </div>
</div>


